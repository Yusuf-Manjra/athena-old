//
// This is a much simplified version of the RootCore script with the same
// name, basically just here to provide the existing scripts/tests with a
// file that they can use.
//

// System include(s):
#include <stdexcept>

// ROOT include(s):
#include <TSystem.h>
#include <TROOT.h>

/// Function setting up interactive ROOT to use the analysis release
///
/// In order to use macros or PyROOT scripts that make use of symbols
/// defined in the analysis release, the user has to execute this macro.
/// It takes care of setting up the compilation options of ACLiC, and
/// of calling xAOD::Init().
///
/// @param options An unused parameter, just to mimic the RootCore function
///
void load_packages( const char* options = "" ) {

   // Make sure that some reasonable environment is set up:
   const char* ROOTCOREDIR = gSystem->Getenv( "ROOTCOREDIR" );
   if( ! ROOTCOREDIR ) {
      throw std::runtime_error( "ROOTCOREDIR not set, please set "
                                "the environment" );
   }
   const std::string dir = ROOTCOREDIR;

   const char* ROOTCOREBIN = gSystem->Getenv( "ROOTCOREBIN" );
   if( ! ROOTCOREBIN ) {
      throw std::runtime_error( "ROOTCOREBIN not set, please set "
                                "the environment");
   }
   const std::string bin = ROOTCOREBIN;

   // Set the compilation options for ACLiC:
   gSystem->AddIncludePath( "@CMAKE_CXX_FLAGS@" );

   // Load the xAODRootAccess library, in a hard-coded way:
   gSystem->Load( "libxAODRootAccess" );
   gROOT->ProcessLine( "xAOD::Init().ignore()" );

   return;
}
