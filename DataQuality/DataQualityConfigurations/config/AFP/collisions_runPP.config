/*
  Copyright (C) 2002-2020 CERN for the benefit of the ATLAS collaboration
*/
############################################################
# AFP
# Nikola Dikic
############################################################

############################################################
 # Reference
reference AFPBinContentReference {
	 location = /eos/atlas/atlascerngroupdisk/data-dqm/references/Other/,root://eosatlas.cern.ch//eos/atlas/atlascerngroupdisk/data-dqm/references/Other/
	 file = AFPOutput62-337176-500k.root
	 path = run_337176
	 name = same_name
}
############################################################

############################################################
# Output
############################################################

output top_level {
	output AFP {
		output SiT {
			output pixelColRow2D {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output PixelColIDChip {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output PixelRowIDChip {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output SiTimeOverThreshold {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output HitsPerPlanes {
			}
			output Cluster {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output Track {
			}
			output clustersPerPlane {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output clustersPerStation {
			}
			output clustersPerPlaneFront {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output clustersPerPlaneEnd {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output clustersPerPlaneMiddle {
				output nearAside {
				}
				output farAside {
				}
				output nearCside {
				}
				output farCside {
				}
			}
			output PP {
				output TrackFME {
				}
			}
		}
		output ToF {
			output HitBarvsTrain {
			}
			output HitsPerBarsInTrain {
				output farAside {
				}
				output farCside {
				}
			}
		}
	}
}

############################################################
# Histogram Assessments
############################################################

dir AFP {
	dir SiT {
		dir PP {
			dir Efficiency {
				dir PlaneEfficiency {
				}
			}
			dir TrackFME {
				hist lbTracksAll_vs_lb_farAside {
					algorithm = HNE
					output = AFP/SiT/PP/TrackFME/lbTracksAll_vs_lb_farAside
					display = LogZ,Draw=COLZ
				}
				hist lbTracksAll_vs_lb_farCside {
					algorithm = HNE
					output = AFP/SiT/PP/TrackFME/lbTracksAll_vs_lb_farCside
					display = LogZ,Draw=COLZ
				}
				hist lbTracksAll_vs_lb_nearAside {
					algorithm = HNE
					output = AFP/SiT/PP/TrackFME/lbTracksAll_vs_lb_nearAside
					display = LogZ,Draw=COLZ
				}
				hist lbTracksAll_vs_lb_nearCside {
					algorithm = HNE
					output = AFP/SiT/PP/TrackFME/lbTracksAll_vs_lb_nearCside
					display = LogZ,Draw=COLZ
				}
				dir Front {
					hist lbTracksFront_vs_lb_farAside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksFront_vs_lb_farAside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksFront_vs_lb_farCside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksFront_vs_lb_farCside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksFront_vs_lb_nearAside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksFront_vs_lb_nearAside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksFront_vs_lb_nearCside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksFront_vs_lb_nearCside
						display = LogZ,Draw=COLZ
					}
				}
				dir Middle {
					hist lbTracksMiddle_vs_lb_farAside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksMiddle_vs_lb_farAside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksMiddle_vs_lb_farCside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksMiddle_vs_lb_farCside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksMiddle_vs_lb_nearAside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksMiddle_vs_lb_nearAside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksMiddle_vs_lb_nearCside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksMiddle_vs_lb_nearCside
						display = LogZ,Draw=COLZ
					}
				}
				dir End {
					hist lbTracksEnd_vs_lb_farAside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksEnd_vs_lb_farAside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksEnd_vs_lb_farCside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksEnd_vs_lb_farCside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksEnd_vs_lb_nearAside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksEnd_vs_lb_nearAside
						display = LogZ,Draw=COLZ
					}
					hist lbTracksEnd_vs_lb_nearCside {
						algorithm = HNE
						output = AFP/SiT/PP/TrackFME/lbTracksEnd_vs_lb_nearCside
						display = LogZ,Draw=COLZ
					}
				}
			}
			dir FME {
				hist nearAside_P0 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearAside_P0
					display = LogZ,Draw=COLZ
				}
				hist nearAside_P1 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearAside_P1
					display = LogZ,Draw=COLZ
				}
				hist nearAside_P2 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearAside_P2
					display = LogZ,Draw=COLZ
				}
				hist nearAside_P3 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearAside_P3
					display = LogZ,Draw=COLZ
				}
				hist nearCside_P0 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearCside_P0
					display = LogZ,Draw=COLZ
				}
				hist nearCside_P1 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearCside_P1
					display = LogZ,Draw=COLZ
				}
				hist nearCside_P2 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearCside_P2
					display = LogZ,Draw=COLZ
				}
				hist nearCside_P3 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/nearCside_P3
					display = LogZ,Draw=COLZ
				}
				hist farAside_P0 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farAside_P0
					display = LogZ,Draw=COLZ
				}
				hist farAside_P1 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farAside_P1
					display = LogZ,Draw=COLZ
				}
				hist farAside_P2 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farAside_P2
					display = LogZ,Draw=COLZ
				}
				hist farAside_P3 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farAside_P3
					display = LogZ,Draw=COLZ
				}
				hist farCside_P0 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farCside_P0
					display = LogZ,Draw=COLZ
				}
				hist farCside_P1 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farCside_P1
					display = LogZ,Draw=COLZ
				}
				hist farCside_P2 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farCside_P2
					display = LogZ,Draw=COLZ
				}
				hist farCside_P3 {
					algorithm = HNE
					output = AFP/SiT/PP/FME/farCside_P3
					display = LogZ,Draw=COLZ
				}
				dir Front {
				}
				dir Middle {
				}
				dir End {
				}
			}
		}
	}
}

############################################################
# Algorithms

algorithm HNE {
	libname = libdqm_algorithms.so
	name = Histogram_Not_Empty
}

algorithm AFPBinContentComp {
	libname = libdqm_algorithms.so
	name = BinContentComp
	thresholds = AFPTestThreshold
	NSigma = 3
	reference = AFPBinContentReference
	publish = 4
	NormRef = 1
}
############################################################


############################################################
# Thresholds
thresholds AFPTestThreshold {
	limits NBins {
		warning = 1
		error = 2
	}
}
###########################################################
